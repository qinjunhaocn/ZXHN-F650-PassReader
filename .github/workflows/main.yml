name: Build and Release ZXHN-F650-PassReader

on:
  workflow_dispatch:  # 手动触发

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - os: windows
            arch: amd64
            output: ZXHN-F650-PassReader-win-x64
          - os: windows
            arch: arm64
            output: ZXHN-F650-PassReader-win-arm64
          - os: linux
            arch: amd64
            output: ZXHN-F650-PassReader-linux-x64
          - os: linux
            arch: arm64
            output: ZXHN-F650-PassReader-linux-arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'  # 你可以根据需要更改 Go 版本
          cache: false        # 禁用缓存

      - name: Build binary
        run: |
          CGO_ENABLED=0 GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o ${{ matrix.output }} .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.output }}
          path: ${{ matrix.output }}

  release:
    runs-on: ubuntu-22.04
    needs: build  # 依赖 build 任务
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: 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  # 使用手动创建的 Token
    
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/${{ matrix.output }}
          asset_name: ${{ matrix.output }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: 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  # 使用手动创建的 Token
